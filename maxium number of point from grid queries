import heapq
class Solution(object):
    def maxPoints(self, grid, queries):
        m,n=len(grid),len(grid[0])
        q_sorted=sorted([(q,i) for i,q in enumerate(queries)])
        res=[0] * len(queries)
        visited=[[False]*n for _ in range(m)]
        heap=[(grid[0][0],0,0)]
        visited[0][0]=True
        count=0
        for q,idx in q_sorted:
            while heap and heap[0][0]<q:
                val,x,y=heapq.heappop(heap)
                count+=1
                for dx,dy in [(1,0),(-1,0),(0,1),(0,-1)]:
                    nx,ny=x+dx,y+dy
                    if 0<=nx<m and 0<=ny<n and not visited[nx][ny]:
                        visited[nx][ny]=True
                        heapq.heappush(heap,(grid[nx][ny],nx,ny))
            res[idx]=count
        return res
